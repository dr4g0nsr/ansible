version: '3'
services:

    web:
        image: nginx:alpine
        hostname: web
        container_name: web
        volumes:
            - "./docker-compose/etc/nginx:/etc/nginx/conf.d"
            - "./docker-compose/etc/ssl:/etc/ssl"
            - "./docker-compose/web:/var/www/html"
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
#        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - {{ PHP_NAME }}
            - {{ DB_SERVER }}

    {{ PHP_NAME }}:
        image: nanoninja/php-fpm:${PHP_VERSION}
        container_name: {{ PHP_NAME }}
        hostname: {{ PHP_NAME }}
        restart: always
        volumes:
            - "./docker-compose/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./docker-compose/web:/var/www/html"

    composer:
        image: "composer"
        container_name: composer
        hostname: composer
        volumes:
            - "./docker-compose/web/app:/app"
        command: install

    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: myadmin
        hostname: myadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST={{ DB_SERVER }}
        restart: always
        depends_on:
            - {{ DB_SERVER }}
    {{ DB_SERVER }}:
        image: mysql:5.7
        container_name: {{ DB_SERVER }}
        hostname: {{ DB_SERVER }}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            - "./docker-compose/data/db/mysql:/var/lib/mysql"

    portainer:
        image: portainer/portainer
        container_name: portainer
        hostname: portainer
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./docker-compose/data/portainer:/data
        ports:
          - "9000:9000"
